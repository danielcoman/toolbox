apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: toolbox
  name: toolbox-worker
  labels:
    app: toolbox-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toolbox-worker
  template:
    metadata:
      labels:
        app: toolbox-worker
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: toolbox-worker
        image: danielcoman/toolbox:latest
        imagePullPolicy: Always
        command:
          - /bin/sh
          - -c
          - 'until [ "imok" = "$(echo ruok)" ] ; do echo waiting ; sleep 1 ; done'
        env:
        - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
          value: "232"
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
          - name: config
            mountPath: /config
            subPath: test.conf
      volumes:
      - name: config
        configMap:
          name: test-conf-volume

# privileged container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: toolbox
  name: toolbox-admin
  labels:
    app: toolbox-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toolbox-admin
  template:
    metadata:
      labels:
        app: toolbox-admin
    spec:
#      securityContext:
#        runAsNonRoot: false
#        runAsGroup: 1002
#        fsGroup: 1002
      terminationGracePeriodSeconds: 10
      containers:
      - name: toolbox-admin
        image: danielcoman/toolbox:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - 'until [ "imok" = "$(echo ruok)" ] ; do echo waiting ; sleep 1 ; done'
        env:
        - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
          value: "232"
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 500Mi
#        volumeMounts:
#          - name: hostetc
#            mountPath: /hostetc
#          - name: hostvar
#            mountPath: /hostvar
#       nodeSelector:
#         kubernetes.io/hostname:
#      volumes:
#        - name: hostetc
#          hostPath:
#            path: /etc
#        - name: hostvar
#          hostPath:
#            path: /var
